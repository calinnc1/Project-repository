/**
  * @file	Blinker.c
  * @author	cosmin.marcu
  * @date	Nov 15, 2022
  * @brief
  */

/* INCLUDES: */
#include "Blinker.h"
#include "Rte_Blinker.h"

/* DEFINES: */

/* TYPES: */

/* VARIABLES: */
static boolean g_Blinker_InitDone_b = FALSE;							///< Module initialization flag
static boolean g_Bliker_Autobrakes_Status = FALSE;                      ///< Blinker State
static boolean g_Bliker_Autobrakes_Previous_Status = FALSE;             ///< Blinker Previous State

/* CONSTANTS: */

/* FUNCTIONS PROTOTYPES: */

/* STATIC FUNCTIONS: */

/* PUBLIC FUNCTIONS: */
/**
  * @brief	Blinker module initialization function
  * @return	None
  */
void Blinker_Init(void)
{

	/* Set initialization flag to done */
	g_Blinker_InitDone_b = TRUE;
}

/**
  * @brief	Blinker module main function (runs in task)
  * @return	None
  */
void Blinker_MainFunction(void)
{
	static boolean Left_Blinker_Status = FALSE;                             ///< Left Blinker Status
	static boolean Right_Blinker_Status = FALSE;                            ///< Right Blinker Status
	/* Check if initialization is done */
	if(TRUE == g_Blinker_InitDone_b)
	{
		Rte_Read_Blinker_Autobrakes_Status(&g_Bliker_Autobrakes_Status);
		if(TRUE == g_Bliker_Autobrakes_Status && FALSE == g_Bliker_Autobrakes_Previous_Status)
		{
			Left_Blinker_Status = TRUE;
			Right_Blinker_Status = TRUE;
			Rte_Write_DIO_Autobrakes_State_b(g_Bliker_Autobrakes_Status);
		}
		else
		{
			g_Bliker_Autobrakes_Status = ~g_Bliker_Autobrakes_Status;
		}
	}
}
/* END OF FILE */
