/**
  * @file	Steering.c
  * @author	cosmin.marcu
  * @date	Nov 4, 2022
  * @brief
  */

/* INCLUDES: */
#include "Steering.h"
#include "Rte_Steering.h"

/* DEFINES: */

/* TYPES: */

/* VARIABLES: */
static boolean g_Steering_InitDone_b = FALSE;							///< Module initialization flag

/* CONSTANTS: */

/* FUNCTIONS PROTOTYPES: */

/* STATIC FUNCTIONS: */
/**
  * This function convert an adc to a duty cycle value
  * @param value of adc
  * @retval float
  */
float adc_to_duty(uint32_t adc_value)
{
	float l_duty_f;
	l_duty_f = adc_value * 0.024414;
	return 	l_duty_f;
}


/**
  * This function convert an duty cycle value to a voltage value
  * @param value of duty cycle
  * @retval float
  */
float duty_to_V(float duty_Cycle_Value)
{
	float l_voltage_f;
	l_voltage_f = duty_Cycle_Value * 0.035;
	return l_voltage_f;
}

/**
  * This function convert voltage value to CCR value
  * @param value of duty cycle
  * @retval float
  */
float V_to_CCR(float voltage)
{
	float l_CCR_val_f;
	l_CCR_val_f = voltage * 655.36;
	return l_CCR_val_f;
}

/* PUBLIC FUNCTIONS: */
/**
  * @brief	Steering module initialization function
  * @return	None
  */
void Steering_Init(void)
{

	/* Set initialization flag to done */
	g_Steering_InitDone_b = TRUE;
}

/**
  * @brief	Steering module main function (runs in task)
  * @return	None
  */
void Steering_MainFunction(void)
{
	/* Check if initialization is done */
	if(TRUE == g_Steering_InitDone_b)
	{

	}
}
/* END OF FILE */
